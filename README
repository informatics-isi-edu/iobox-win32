DAMS Lightweight Outbox
~~~~~~~~~~~~~~~~~~~~~~~

DAMS Lightweight Outbox is a client-side utility for registering new files 
in a ERMREST service.

System Requirements
~~~~~~~~~~~~~~~~~~~

DAMS Lightweight Outbox is a Python based utility. It is using Globus Online (GO) to transfer files.
It is implemented on Windows as a service. The following are the prerequisites:

  1. Python version 2.7+.
  2. pywin32, Mark Hammond's add-on that includes the Win32 API, COM support, and Pythonwin extensions.
     It's available from the pywin32 project on SourceForge.
  3. setuptools Python Package. For Windows 7, download ez_setup.py using your favorite web browser
     or other technique and "run" that file.
  4. globusonline-transfer-api-client Python package. To install it, run:
  
  		easy_install globusonline-transfer-api-client
  		
  5. Globus Connect Personal for Windows.
  6. py2exe from SourceForge.


Installation
~~~~~~~~~~~~

  1. Check out the code from SVN from the following location
     https://svn2.misd.isi.edu/repos/tagfiler/win32damsel/trunk.

  2. cd into the "src\service" directory.

  3. Run:
  
  		python setup.py py2exe

	 Two directories will be created: "build" and "dist". You can ignore the "build" directory.
	 
  4. Open a 'Command Prompt' window in 'Run as Administrator' mode.
   
  5. cd into the "src\service\dist" directory.  
   
  6. Install the service by running:
   
   		CirmObserverService.exe -install
   		
  7. In the "Services" console, you will find the service named "CIRMIOBox".
  
  8. Right click the service and select "Properties". Select the "Log On" tab.
     Check the "This account" box. Enter the user and the password for running
     this service. The setting is necessary because the service needs permission 
     to write in the application log file.	
     Select the "General" tab. Select "Automatic" for the "Startup type". The service
     will start automatically after reboot.
     
  9. To uninstall the service, while the service is stopped, from the "src\service\dist", run:
  
   		CirmObserverService.exe -remove
  
Configuration
~~~~~~~~~~~~~

DAMS Lightweight Outbox will look for the configuration file at:

  %HOMEPATH%\Documents\scans\config\outbox.conf

The following is a sample of the configuration file:

{
    "url": "https://cirm-dev.misd.isi.edu/ermrest/catalog/1",
    "http_url": "https://cirm-dev.misd.isi.edu/cirm-files",
    "goauthtoken": true,
    "bulk_ops_max": 1000,
    "inbox": "C:\\Users\\your_user_id\\Documents\\scans\\inbox",
    "outbox": "C:\\Users\\your_user_id\\Documents\\scans\\outbox",
    "rejected": "C:\\Users\\your_user_id\\Documents\\scans\\rejected",
    "log": "C:\\Users\\your_user_id\\Documents\\scans\\log\\cirm_iobox.log",
    "loglevel": "debug",
    "username": "your_user_id",
    "password": "your_password",
    "pattern": "http-*[^-]+[-](?P<slideid>.*)[.]czi",
    "endpoint_1": "your_user_id#IPC-XPS-89",
    "endpoint_2": "isidev#cirm-files"
}

The required parameters are:

	- url: The ERMREST URL
	- http_url: the root URL for the files storage
	- inbox: the directory the service is watching for new files
	- outbox: the directory the service is moving the files in case of success
	- rejected: the directory the service is moving the files in case of failure
	- username: the GO username
	- password: the GO password
	- pattern: the pattern used in matching the file names. 
		For example, a valid name will be "http---cirm.7.purl.org-20131110-wnt1creZEGG-RES-0-06-000.czi".
	- endpoint_1: the Windows GO endpoint name.
	- endpoint_2: the storage GO endpoint name.
	
The optional parameters are:	
	
	- goauthtoken: if "true", then the service is using GO authentication
	- bulk_ops_max: the maximum number of bulk operations. The default value is 1000.
	- log: the service log file
	- loglevel: the log level. Valid values are: "error", "warning", "info" and "debug".
	
Troubleshooting
~~~~~~~~~~~~~~~

Normally, the application will end gracefully once the service is stopped.
In the case the service can not be stopped, create an empty file named "stop_service.txt" and
place it in the "inbox" directory.

